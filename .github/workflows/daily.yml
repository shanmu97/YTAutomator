name: Daily YTAutomator

on:
  schedule:
    - cron: '0 13 * * *'  # 9:00 AM local (example)
    - cron: '0 16 * * *'
    - cron: '0 18 * * *'
    - cron: '0 23 * * *'
    - cron: '0 2 * * *'
  workflow_dispatch: {}

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system deps (ffmpeg)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Restore credentials
        env:
          CLIENT_SECRET_JSON: ${{ secrets.CLIENT_SECRET_JSON }}
          TOKEN_JSON: ${{ secrets.TOKEN_JSON }}
        run: |
          if [ -n "$CLIENT_SECRET_JSON" ]; then
            echo "$CLIENT_SECRET_JSON" > client_secret.json
            echo "✅ Wrote client_secret.json"
          else
            echo "⚠️ CLIENT_SECRET_JSON not set, skipping client_secret.json"
          fi
          if [ -n "$TOKEN_JSON" ]; then
            echo "$TOKEN_JSON" > token.json
            echo "✅ Wrote token.json"
          else
            echo "⚠️ TOKEN_JSON not set, skipping token.json"
          fi

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pipeline
        env:
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python main.py --run-once

      - name: Upload generated videos and temp files (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: yt-outputs
          path: |
            output/**/short*.mp4
            output/**/tmp_v/**

      - name: Notify on failure to Slack (optional)
        if: failure()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          if [ -z "$SLACK_WEBHOOK" ]; then
            echo "SLACK_WEBHOOK not set, skipping notification"
            exit 0
          fi
          payload=$(jq -n --arg text "YTAutomator workflow failed. Check artifacts for details." '{text: $text}')
          curl -s -X POST -H 'Content-type: application/json' --data "$payload" "$SLACK_WEBHOOK"
